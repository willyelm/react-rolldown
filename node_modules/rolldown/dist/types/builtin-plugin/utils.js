import { BindingCallableBuiltinPlugin } from '../binding';
export function makeBuiltinPluginCallable(plugin) {
    let callablePlugin = new BindingCallableBuiltinPlugin(bindingifyBuiltInPlugin(plugin));
    const wrappedPlugin = plugin;
    for (const key in callablePlugin) {
        // @ts-expect-error
        wrappedPlugin[key] = function (...args) {
            // @ts-expect-error
            return callablePlugin[key](...args);
        };
    }
    return wrappedPlugin;
}
export function bindingifyBuiltInPlugin(plugin) {
    return {
        __name: plugin.name,
        options: plugin._options,
    };
}
