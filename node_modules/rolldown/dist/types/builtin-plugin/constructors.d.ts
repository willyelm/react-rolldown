import { type BindingBuiltinPluginName, BindingGlobImportPluginConfig, BindingManifestPluginConfig, BindingModulePreloadPolyfillPluginConfig, BindingJsonPluginConfig, BindingBuildImportAnalysisPluginConfig, type BindingViteResolvePluginConfig, BindingModuleFederationPluginOption, BindingRemote } from '../binding';
export declare class BuiltinPlugin {
    name: BindingBuiltinPluginName;
    _options?: unknown | undefined;
    constructor(name: BindingBuiltinPluginName, _options?: unknown | undefined);
}
export declare function modulePreloadPolyfillPlugin(config?: BindingModulePreloadPolyfillPluginConfig): BuiltinPlugin;
export declare function dynamicImportVarsPlugin(): BuiltinPlugin;
export declare function importGlobPlugin(config?: BindingGlobImportPluginConfig): BuiltinPlugin;
export declare function manifestPlugin(config?: BindingManifestPluginConfig): BuiltinPlugin;
export declare function wasmHelperPlugin(): BuiltinPlugin;
export declare function wasmFallbackPlugin(): BuiltinPlugin;
export declare function loadFallbackPlugin(): BuiltinPlugin;
export declare function jsonPlugin(config?: BindingJsonPluginConfig): BuiltinPlugin;
export declare function buildImportAnalysisPlugin(config: BindingBuildImportAnalysisPluginConfig): BuiltinPlugin;
export declare function viteResolvePlugin(config: Omit<BindingViteResolvePluginConfig, 'runtime'>): BuiltinPlugin;
export type ModuleFederationPluginOption = Omit<BindingModuleFederationPluginOption, 'remotes'> & {
    remotes?: Record<string, string | BindingRemote>;
};
export declare function moduleFederationPlugin(config: ModuleFederationPluginOption): BuiltinPlugin;
