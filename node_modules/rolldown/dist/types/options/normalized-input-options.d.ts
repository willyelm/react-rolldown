import type { LogHandler } from '../types/misc';
import { BindingNormalizedOptions } from '../binding';
import { InputOptions } from '..';
export interface NormalizedInputOptions {
    input: string[] | Record<string, string>;
    cwd: string | undefined;
    platform: InputOptions['platform'];
    shimMissingExports: boolean;
}
export declare class NormalizedInputOptionsImpl implements NormalizedInputOptions {
    onLog: LogHandler;
    inner: BindingNormalizedOptions;
    constructor(inner: BindingNormalizedOptions, onLog: LogHandler);
    get shimMissingExports(): boolean;
    get input(): string[] | Record<string, string>;
    get cwd(): string | undefined;
    get platform(): 'browser' | 'node' | 'neutral';
}
