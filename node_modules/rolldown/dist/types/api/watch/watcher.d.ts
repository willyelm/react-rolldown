import { BindingWatcher } from '../../binding';
import { WatchOptions } from '../../options/watch-options';
import { WatcherEmitter } from './watch-emitter';
export declare class Watcher {
    closed: boolean;
    inner: BindingWatcher;
    emitter: WatcherEmitter;
    stopWorkers: ((() => Promise<void>) | undefined)[];
    constructor(emitter: WatcherEmitter, inner: BindingWatcher, stopWorkers: ((() => Promise<void>) | undefined)[]);
    close(): Promise<void>;
    start(): void;
}
export declare function createWatcher(emitter: WatcherEmitter, input: WatchOptions | WatchOptions[]): Promise<void>;
