import { LOG_LEVEL_DEBUG, LOG_LEVEL_INFO, LOG_LEVEL_WARN } from '../log/logging';
import { error, logPluginError } from '../log/logs';
import { getLogHandler, normalizeLog } from '../log/logHandler';
import { VERSION } from '..';
export class MinimalPluginContext {
    pluginName;
    info;
    warn;
    debug;
    meta;
    constructor(onLog, logLevel, pluginName) {
        this.pluginName = pluginName;
        this.debug = getLogHandler(LOG_LEVEL_DEBUG, 'PLUGIN_LOG', onLog, pluginName, logLevel);
        this.info = getLogHandler(LOG_LEVEL_INFO, 'PLUGIN_LOG', onLog, pluginName, logLevel);
        this.warn = getLogHandler(LOG_LEVEL_WARN, 'PLUGIN_WARNING', onLog, pluginName, logLevel);
        this.meta = {
            rollupVersion: '4.23.0',
            rolldownVersion: VERSION,
            watchMode: false,
        };
    }
    error(e) {
        return error(logPluginError(normalizeLog(e), this.pluginName));
    }
}
