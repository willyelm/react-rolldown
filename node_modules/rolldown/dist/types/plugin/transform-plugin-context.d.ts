import type { BindingPluginContext, BindingTransformPluginContext } from '../binding';
import type { LogHandler, LogLevelOption, RollupError } from '../types/misc';
import { PluginContext } from './plugin-context';
import { PluginContextData } from './plugin-context-data';
import type { Plugin } from './index';
import { SourceMap } from '../types/rolldown-output';
import { OutputOptions } from '../options/output-options';
export declare class TransformPluginContext extends PluginContext {
    private inner;
    private moduleId;
    private moduleSource;
    constructor(outputOptions: OutputOptions, context: BindingPluginContext, plugin: Plugin, data: PluginContextData, inner: BindingTransformPluginContext, moduleId: string, moduleSource: string, onLog: LogHandler, LogLevelOption: LogLevelOption);
    error(e: RollupError | string, pos?: number | {
        column: number;
        line: number;
    }): never;
    getCombinedSourcemap(): SourceMap;
}
